---
- name: Install Docker and Deploy Application
  hosts: app
  become: true

  vars:
    repo_clone_url: ""
    repo_branch: "main"
  tasks:
    - name: Ensure git, docker.io, and docker-compose are installed
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - git
        state: present
        update_cache: true
    
    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: yes

    - name: Add Docker apt repository (using signed-by)
      ansible.builtin.apt_repository:
        repo: deb [arch="{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}" signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker
        update_cache: yes

    - name: Install Docker Engine, CLI, Containerd, and Compose Plugin
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Ensure permissions for the Docker socket (add user to docker group)
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure docker service is running and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes


    - name: Clone the infrastructure repository
      ansible.builtin.git:
        repo: "{{ repo_clone_url }}"
        dest: /home/{{ ansible_user }}/infrastructure
        version: "{{ repo_branch }}"
        force: yes
      become: no